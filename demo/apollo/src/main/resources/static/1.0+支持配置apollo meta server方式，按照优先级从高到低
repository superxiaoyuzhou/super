1.通过Java System Property apollo.meta
    可以通过Java的System Property apollo.meta来指定
    在Java程序启动脚本中，可以指定-Dapollo.meta=http://config-service-url
    如果是运行jar文件，需要注意格式是java -Dapollo.meta=http://config-service-url -jar xxx.jar
    也可以通过程序指定，如System.setProperty("apollo.meta", "http://config-service-url");

2.通过Spring Boot的配置文件
    可以在Spring Boot的application.properties或bootstrap.properties中指定apollo.meta=http://config-service-url
    通过操作系统的System EnvironmentAPOLLO_META
    可以通过操作系统的System Environment APOLLO_META来指定
    注意key为全大写，且中间是_分隔

3.通过server.properties配置文件
    可以在server.properties配置文件中指定apollo.meta=http://config-service-url
    对于Mac/Linux，文件位置为/opt/settings/server.properties
    对于Windows，文件位置为C:\opt\settings\server.properties

4.通过app.properties配置文件
    可以在classpath:/META-INF/app.properties指定apollo.meta=http://config-service-url
    通过Java system property ${env}_meta
    如果当前env是dev，那么用户可以配置-Ddev_meta=http://config-service-url
    使用该配置方式，那么就必须要正确配置Environment，详见1.2.4.1 Environment

5.通过操作系统的System Environment ${ENV}_META (1.2.0版本开始支持)
    如果当前env是dev，那么用户可以配置操作系统的System Environment DEV_META=http://config-service-url
    注意key为全大写
    使用该配置方式，那么就必须要正确配置Environment，详见1.2.4.1 Environment

6.通过apollo-env.properties文件
    用户也可以创建一个apollo-env.properties，放在程序的classpath下，或者放在spring boot应用的config目录下
    使用该配置方式，那么就必须要正确配置Environment，详见1.2.4.1 Environment
    文件内容形如：
    dev.meta=http://1.1.1.1:8080
    fat.meta=http://apollo.fat.xxx.com
    uat.meta=http://apollo.uat.xxx.com
    pro.meta=http://apollo.xxx.com

如果通过以上各种手段都无法获取到Meta Server地址，
Apollo最终会fallback到http://apollo.meta作为Meta Server地址